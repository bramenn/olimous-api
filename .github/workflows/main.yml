name: Python lint and CI/CD

on: [pull_request]

# env:
#   AWS_REGION: ${{ secrets.AWS_REGION }}
#   ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
#   ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
#   ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
#   CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - uses: isort/isort-action@master
      with:
        sortPaths: "./app"
    - uses: psf/black@stable
      with:
        src: "./app"
        version: "22.12.0"
    - name: pre-commit
      run: |
        pip install pre-commit
        pre-commit run -av trailing-whitespace
        pre-commit run -av end-of-file-fixer
        pre-commit run -av check-yaml
        pre-commit run -av check-added-large-files

    # Install pip and pytest
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
    - name: Test with pytest
      run: pytest test

  docker:
    if: "github.ref_name == 'master'"
    runs-on: ubuntu-latest
    needs: [lint]
    environment: deploy
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: bramenn/olimpus:latest

      - name: Create kubeconfig
        run: |
          mkdir ${HOME}/.kube
          echo '${{ secrets.KUBECONFIG }}' | base64 --decode > ${HOME}/.kube/config
          cat ${HOME}/.kube/config

      - name: Use context
        run: kubectl config use-context octobay-api

      - name: Deploy to K8s
        run: kubectl apply -f k8s/
